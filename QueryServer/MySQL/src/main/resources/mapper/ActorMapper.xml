<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.tongji.queryserver.mapper.ActorMapper">
  <resultMap id="BaseResultMap" type="edu.tongji.queryserver.entity.Actor">
    <id column="actor_uuid" jdbcType="BINARY" property="actorUuid" />
    <result column="actor_name" jdbcType="VARCHAR" property="actorName" />
  </resultMap>

  <!-- 添加Movie的ResultMap -->
  <resultMap id="MovieResultMap" type="edu.tongji.queryserver.entity.Movie">
    <id column="movie_id" jdbcType="VARCHAR" property="movieId" />
    <result column="movie_title" jdbcType="VARCHAR" property="movieTitle" />
    <result column="imdb_score" jdbcType="REAL" property="imdbScore" />
    <result column="review_num" jdbcType="INTEGER" property="reviewNum" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="byte[]">
    delete from Actor
    where actor_uuid = #{actorUuid,jdbcType=BINARY}
  </delete>

  <insert id="insert" parameterType="edu.tongji.queryserver.entity.Actor">
    <selectKey keyProperty="actorUuid" order="AFTER" resultType="byte[]">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Actor (actor_name)
    values (#{actorName,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="edu.tongji.queryserver.entity.Actor">
    update Actor
    set actor_name = #{actorName,jdbcType=VARCHAR}
    where actor_uuid = #{actorUuid,jdbcType=BINARY}
  </update>

  <select id="selectByPrimaryKey" parameterType="byte[]" resultMap="BaseResultMap">
    select actor_uuid, actor_name
    from Actor
    where actor_uuid = #{actorUuid,jdbcType=BINARY}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select actor_uuid, actor_name
    from Actor
  </select>

  <!-- 查询某演员参演的电影数量（通过名字） -->
  <select id="countMoviesByActorName" parameterType="string" resultType="int">
    SELECT COUNT(DISTINCT m.movie_id)
    FROM Movie m
    JOIN Act a ON m.movie_id = a.movie_id
    JOIN Actor actor ON a.actor_uuid = actor.actor_uuid
    WHERE actor.actor_name = #{actorName}
  </select>

  <!-- 查询某演员参演的电影列表（通过名字） -->
  <select id="findMoviesByActorName" parameterType="string" resultMap="MovieResultMap">
    SELECT m.*
    FROM Movie m
    JOIN Act a ON m.movie_id = a.movie_id
    JOIN Actor actor ON a.actor_uuid = actor.actor_uuid
    WHERE actor.actor_name = #{actorName}
  </select>

</mapper>