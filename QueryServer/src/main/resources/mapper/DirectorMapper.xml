<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.tongji.queryserver.mapper.DirectorMapper">
  <resultMap id="BaseResultMap" type="edu.tongji.queryserver.entity.Director">
    <id column="director_uuid" jdbcType="BINARY" property="directorUuid" />
    <result column="director_name" jdbcType="VARCHAR" property="directorName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="byte[]">
    delete from Director
    where director_uuid = #{directorUuid,jdbcType=BINARY}
  </delete>
  <insert id="insert" parameterType="edu.tongji.queryserver.entity.Director">
    <selectKey keyProperty="directorUuid" order="AFTER" resultType="byte[]">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Director (director_name)
    values (#{directorName,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="edu.tongji.queryserver.entity.Director">
    update Director
    set director_name = #{directorName,jdbcType=VARCHAR}
    where director_uuid = #{directorUuid,jdbcType=BINARY}
  </update>
  <select id="selectByPrimaryKey" parameterType="byte[]" resultMap="BaseResultMap">
    select director_uuid, director_name
    from Director
    where director_uuid = #{directorUuid,jdbcType=BINARY}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select director_uuid, director_name
    from Director
  </select>
  <!-- 根据导演名字查询电影数量 -->
  <select id="countMoviesByDirectorName" resultType="map">
    SELECT d.director_name, COUNT(DISTINCT di.movie_id) as movie_count
    FROM director d
    LEFT JOIN direct di ON d.director_uuid = di.director_uuid
    WHERE d.director_name LIKE CONCAT('%', #{directorName}, '%')
    GROUP BY d.director_uuid, d.director_name
  </select>
  <!-- 根据导演名字查询电影列表 -->
  <select id="findMoviesByDirectorName" resultType="map">
    SELECT d.director_name, m.movie_title, m.imdb_score
    FROM director d
    JOIN direct di ON d.director_uuid = di.director_uuid
    JOIN movie m ON di.movie_id = m.movie_id
    WHERE d.director_name LIKE CONCAT('%', #{directorName}, '%')
    ORDER BY m.imdb_score DESC
  </select>
</mapper>