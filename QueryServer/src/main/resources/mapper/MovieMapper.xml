<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.tongji.queryserver.mapper.MovieMapper">
  <resultMap id="BaseResultMap" type="edu.tongji.queryserver.entity.Movie">
    <id column="movie_id" jdbcType="VARCHAR" property="movieId" />
    <result column="movie_title" jdbcType="VARCHAR" property="movieTitle" />
    <result column="imdb_score" jdbcType="REAL" property="imdbScore" />
    <result column="review_num" jdbcType="INTEGER" property="reviewNum" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from Movie
    where movie_id = #{movieId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.tongji.queryserver.entity.Movie">
    <selectKey keyProperty="movieId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Movie (movie_title, imdb_score, review_num
      )
    values (#{movieTitle,jdbcType=VARCHAR}, #{imdbScore,jdbcType=REAL}, #{reviewNum,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="edu.tongji.queryserver.entity.Movie">
    update Movie
    set movie_title = #{movieTitle,jdbcType=VARCHAR},
      imdb_score = #{imdbScore,jdbcType=REAL},
      review_num = #{reviewNum,jdbcType=INTEGER}
    where movie_id = #{movieId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select movie_id, movie_title, imdb_score, review_num
    from Movie
    where movie_id = #{movieId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select movie_id, movie_title, imdb_score, review_num
    from Movie
  </select>
  <!-- 根据电影名称查询版本数量 -->
  <select id="countVersionsByMovieTitle" resultType="map">
    SELECT m.movie_title, COUNT(v.version_uuid) as version_count
    FROM movie m
    LEFT JOIN version v ON m.movie_id = v.movie_id
    WHERE m.movie_title LIKE CONCAT('%', #{movieTitle}, '%')
    GROUP BY m.movie_id, m.movie_title
  </select>
  <!-- 根据电影名称查询所有版本信息 -->
  <select id="findVersionsByMovieTitle" resultType="map">
    SELECT m.movie_title, v.edition, v.language
    FROM movie m
    JOIN version v ON m.movie_id = v.movie_id
    WHERE m.movie_title LIKE CONCAT('%', #{movieTitle}, '%')
  </select>
</mapper>